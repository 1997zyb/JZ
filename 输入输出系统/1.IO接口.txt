I/O接口：又称I/O控制器，设备控制器，负责协调主机与外部设备之间的数据传输


I/O接口的作用
  （1）数据缓冲：通过数据缓冲寄存器达到主机和外设工作速度的匹配
  （2）错误或状态的检测：通过状态控制器反馈设备的各种错误，状态信息
  （3）控制和定时：接受从控制总线发来的控制信号，时钟信号

  主机————>I/O接口————>I/O设备



统一编址：
  IO端口地址和主存地址空间统一，用访存指令访问IO端口

  内容：把外部设备的存储当作内存进行分配，有统一的地区分配，靠不同的地址区别内存和外部设备
  优点：不需要专门的指令表示访问外存；读写控制电路简单；程序设计灵活性高
  缺点：端口占用了主存地址空间；使主存地址空间变小；寻址时间长（外部设备）


独立编址：
  IO端口地址和主存地址相互独立，用IO命令访问IO端口
  内容：独立编址，专门为输入输出指令设置访问端口，靠不同指令区别内存和外部设备
  优点：地址译码快，不占用主存地址空间
  缺点：程序设计灵活性差；指令增加，控制电路复杂



串行接口：一位一位的传送
并行接口：一个字节或一个字的所有位同时传送



主机访问I/O设备的控制方式
  一、程序查询方式
  特点：CPU与I/O串行工作，CPU不断查询I/O设备状态，直到外部设备准备就绪。
  优点：接口设计简单，设备量少
  缺点：CPU信息传递过程中要花费很多时间用于查询和等待，而且在一段时间内只能和一台外设交换信息，效率低。

  独立查询：CPU100%的时间都在查询I/O状态，完全串行。
  定时查询：每隔一段时间CPU就查询I/O状态，查询的间隔内CPU可以执行其他程序。

  二、中断方式
  程序中断是指在计算机执行程序过程中，出现某些急需处理的异常情况或特殊请求，CPU
  暂时中断现行程序，而去执行这些异常情况或特殊请求。处理完毕后又自动返回现行程序的
  断点处，继续执行原程序。

  CPU在统一时刻每条指令执行阶段结束前向接口发出中断查询信号，获取I/O中断请求，也就是说，
  CPU响应中断的时间是在每条指令执行阶段的结束时刻。

  问题一：接收到中断信号后是怎么转到执行中断程序的？
  答：中断隐指令，保存原程序的PC值，并让PC指向中断程序的第一条。
    
      中断隐指令的任务：
        关中断，在中断服务程序中，为保护中断现场不会再被新的中断打断，就必须关中断；
        保存断点，保证“回得来”；
        引出中断服务程序，将中断服务程序入口地址传送给程序计数器；
      
      中断服务程序的任务：
        保护现场，保存通用寄存器和状态寄存器内容；
        中断服务，
        恢复现场，通过出栈或取值把之前保存的信息传送回寄存器中；
        中断返回，通过中断返回程序回到原程序断点处；

      中断处理过程 = 中断隐指令 + 中断服务程序

  问题二：中断程序执行完后是怎么回来执行原先程序的？

  问题三：假如有多个程序断源同时申请，怎么专门安排优先顺序？
  答：有两种处理办法：
        1.硬件实现硬件排队器
        2.软件实现查询软件
      中断优先级：
        硬件故障中断>软件中断
        非屏蔽中断>屏蔽中断
        DMA请求>I/O设备传送的中断请求

  问题四、如何判断是哪个设备发来的中断信号？
  答：会存在一个中断请求标记寄存器，里面不同位代表不同的设备中断，状态位为1的话，代表处理中断请求

  三、DMA方式
  特点：
    1、内存既可以被CPU访问也可以被DMA控制器访问，CPU和DMA控制器会竞争总线的使用权，因而需要仲裁机制。
    2、外设与内存之间的整个数据交换过程全部在DMA控制器的控制下完成，CPU能够与外设并行工作，提高了效率；
    3、在DMA方式开始之前CPU要对DMA控制器进行初始化，在DMA方式结束后，CPU要申请中断，对内存缓冲区进行后处理；

    DMA处理方式：
    1、预处理：CPU完成寄存器初值设置等准备工作
    2、数据传输“CPU继续执行主程序，DMA控制器完成数据传送
    3、后处理：CPU执行中断服务程序做DMA结束处理

    DMA的传送方式：
    1、停止CPU访存：需要传送数据时，停止CPU访存，总线控制权交给DMA控制器；
    2、周期挪用方式：当I/O接口没有DMA请求时，CPU按照程序要求访问内存，一旦有DMA请求，则I/O接口挪用一个
    或几个周期。缺点：数据传入或者输出过程中占用了CPU时间；
    3、交替访存方式：CPU和DMA控制器交替访问内存，不需要总线使用权的申请，建立和归还过程。（效率高，实现困难，基本不用）




DMA和中断方式的区别：

  中断方式：
  （1）数据传送：程序控制
  （2）中断请求：传输数据
  （3）响应：指令执行周期结束后响应中断
  （4）适用场景：CPU控制，低速设备备
  （5）优先级：低于DMA
  （6）工作内容：CPU与外设并行，传送与主程序串行
  （7）请求内容：请求的是CPU处理时间
  DMA方式：
  （1）数据传送：硬件控制————DMA控制器。CPU只需进行预处理和后处理
  （2）中断请求：向CPU报告传输结束
  （3）响应：每个机器周期结束都可以，即总线空闲时即可
  （4）适用场景：DMA控制器控制，高速设备
  （5）优先级：高于中断
  （6）工作内容：CPU与外设并行，传送与主程序并行
  （7）请求内容：请求的总线的使用权











