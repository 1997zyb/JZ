/*
  溢出的判断：
  只有 “正数+正数”，才会上溢 ————正+正 = 负
  只有 “负数+负数”，才会下溢 ————负+负 = 正

  方法一：采用一位符号位
    设A的符号为A1，B的符号为B2，运算结果的符号为S，
    则溢出的逻辑表达式为：
    V=(A1 && B2 && !S) || (!A1 && !B2 && S)；
    若V=0，表示无溢出；
    若V=1，表示有溢出；
  
  方法二：采用一位符号位
    根据数据位进位情况判断溢出，符号位的进位C1，最高位的进位C2，
    即：C1和C2不同时有溢出，
    采用异或电路判断，为1时溢出，为0时不溢出，
    （相同为0，不同为1）

  方法三：采用双符号位
    正数符号为00，负数符号为11，
    [A+C]补 = 00,0001111 + 00,1111100 = 01,0001011  上溢
    （复制了一个符号位）
    [B-C]补 = 11,1101000 + 11,0000100 = 10,1101100   下溢
    
    记作两个符号位为S1，S2，则V等于S1和S2进行异或运算
    若V=0，表示无溢出，若V=1，表示有溢出；


    符号扩展：
      定点整数的符号位扩展：
        在原符号位和数值位中间添上新位，正数都添0；负数原码添0，反、补码添1；
      
      定点小数的符号位扩展：
        在原数值位后面添上新位，正数都添加0；负数原、补码添加0，反码添加1；
*/